// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Register should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Register
    handleChange={[MockFunction]}
    handleSubmit={[MockFunction]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    registerUser={[MockFunction]}
    registrationSuccessful={false}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="common-login-register"
      >
        <div
          className="container"
        >
          <registrationForm
            handleSubmit={[Function]}
            onchange={[Function]}
          />
        </div>
      </div>,
      "className": "common",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="container"
        >
          <registrationForm
            handleSubmit={[Function]}
            onchange={[Function]}
          />
        </div>,
        "className": "common-login-register",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <registrationForm
            handleSubmit={[Function]}
            onchange={[Function]}
          />,
          "className": "container",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "handleSubmit": [Function],
            "onchange": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="common-login-register"
        >
          <div
            className="container"
          >
            <registrationForm
              handleSubmit={[Function]}
              onchange={[Function]}
            />
          </div>
        </div>,
        "className": "common",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <registrationForm
              handleSubmit={[Function]}
              onchange={[Function]}
            />
          </div>,
          "className": "common-login-register",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <registrationForm
              handleSubmit={[Function]}
              onchange={[Function]}
            />,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "handleSubmit": [Function],
              "onchange": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
